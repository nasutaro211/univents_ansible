# 参考
# https://qiita.com/Morinikiz/items/9296a915205b2e5af703
# https://qiita.com/s_inokuma/items/e757e8cfe79629d706f1

- name: install postgresql
  yum:
   name: ['postgresql-server', 'postgresql-devel', 'postgresql-contrib', 'python-psycopg2', 'libselinux-python']
   state: installed
  tags:
    - postgresql

- name: Check if PostgreSQL database is initialized.
  stat:
    path: "/var/lib/pgsql/data/PG_VERSION"
  register: pgdata_dir_version

- name: postgresql initdb
  shell: postgresql-setup initdb
  when: not pgdata_dir_version.stat.exists
  sudo: true

- name: start postgresql
  service: name=postgresql state=started  enabled=yes

# ユーザー作成
- name: change postgres password of psql
  become: yes
  become_user: postgres
  postgresql_user:
    name: postgres
    password: "{{ db_postgres_password }}"

- name: create rails user of psql
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"

# DBを作成する必要がある？

# 設定ファイルを変更
- name: Check that the pg_hba.conf exists
  stat:
    path: /var/lib/pgsql/data/pg_hba.conf
  register: stat_result

- name: backup pg_hba.conf
  shell: mv /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf.default
  when: stat_result.stat.exists == True

- name: pg_hba.conf setting
  template:
    src: pg_hba.conf.j2
    dest: /var/lib/pgsql/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: 0600

- name: restart postgresql
  service: name=postgresql state=restarted  enabled=yes
# - name: make sudores dir
#   file: path=/etc/sudoers.d/postgres state=directory owner=root group=root mode=0755
#
# - name: postgres user sudores
#   lineinfile:
#     dest: /etc/sudoers.d/postgres
#     owner: root
#     group: root
#     mode: 0440
#     line: "%vagrant ALL=(postgres) NOPASSWD: ALL"
#     state: present
#     create: yes
#     validate: "visudo -cf %s"

# - name: create user
#   user: name={{ db_user }} password={{ db_password }}
#
# - name: Ensure PostgreSQL databases are present.
#   postgresql_db:
#     name: "univents"
#     login_user: "{{ db_user }}"
#     login_password: "{{ db_password }}"
#     state: present
#     owner: "{{ db_user }}"
#
# - name: Ensure PostgreSQL users are present.
#   postgresql_user:
#     name: "{{ db_user }}"
#     password: "{{ db_password }}"
#     state: present
#     login_user: "{{ db_user }}"
#     login_password: "{{ db_password }}"
#     role_attr_flags: CREATEDB,LOGIN
  # sudo_user: postgres
  # sudo: yes
